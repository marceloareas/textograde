version: "3.9"
services:
  backend:
    build:
      context: .
      dockerfile: /backend/Dockerfile.backend
    container_name: textgrader_backend
    command: flask run --host=0.0.0.0
    environment:
      - SUBSCRIPTION_KEY=sua-chave-aqui
      - ENDPOINT=seu-endpoint-aqui
      - MONGO_URI=mongodb://root:example@mongodb:27017/textgrader?authSource=admin
    volumes:
      - ./backend:/app/backend
    ports:
      - "5000:5000"
    restart: always
    depends_on:
      - mongodb
    networks:
      - my_custom_network
    deploy:  
      resources:
        limits: # Segundo Limite Backend
          cpus: "0.5"   
          memory: 256M   
        reservations: # Primeiro Limite Backend
          memory: 128M

  mongodb:
    image: mongo:latest
    container_name: textgrader_mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
      - MONGO_INITDB_DATABASE=textgrader
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: always
    networks:
      - my_custom_network
    deploy:  
      resources:
        limits: # Segundo limite MongoDB
          cpus: "1.0"    
          memory: 256M
        reservations: # Primeiro Limite MongoDB
          cpus: "0.25"
          memory: 128M

  # mongo-express:
  #   image: mongo-express
  #   container_name: textgrader_mongodb_express
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=root
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=example
  #     - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongodb:27017/textgrader?authSource=admin
  #   networks:
  #     - my_custom_network
  #   deploy:  
  #     resources:
  #       limits: # Segundo Limite MongoDB Express
  #         cpus: "0.5"   
  #         memory: 128M

  #       reservations:  # Primeiro Limite MongoDB Express
  #         cpus: "0.25"
  #         memory: 64M

  # frontend:
  #   build:
  #     context: .
  #     dockerfile: /frontend/Dockerfile.frontend
  #   container_name: textgrader_frontend
  #   ports:
  #     - "3030:3030"
  #   restart: unless-stopped
  #   networks:
  #     - my_custom_network
  #   deploy:  
  #     resources:
  #       limits: # Segundo Limite Front
  #         cpus: "0.5"   
  #         memory: 256M  
  #       reservations: # Primeiro Limite Front
  #         cpus: "0.25"
  #         memory: 128M
          

volumes:
  mongo_data:

networks:
  my_custom_network:
    driver: bridge